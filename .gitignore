import tkinter as tk

# variables to be mainly used
running_time = False
hours, minutes, seconds = 0, 0, 0

# start, pause, lap, and resume functions
# start function

# resume function 

# reset function

# updating the stopwatch function
def running_time_animation():
    global hours, minutes, seconds
    seconds += 1
    if seconds == 60:
        minutes += 1
        seconds = 0
    if minutes == 60:
        hours += 1
        minutes = 0
        
    # including zero (0) in stopwatch when hours, minutes, or seconds is single digit number
    hours_str = f"{hours}" if hours > 9 else f"0{hours}"
    minutes_str = f"{minutes}" if minutes > 9 else f"0{minutes}"
    seconds_str = f"{seconds}" if seconds > 9 else f"0{seconds}"
    
    # configuration of stopwatch timer
    stopwatch.config(text=hours_str + ":" + minutes_str + ":" + seconds_str)
    
    # after each second, call the running_time_animation function
    global running_animation_time
    running_animation_time = stopwatch.after(1000, running_time_animation)
    
    
# creating the main window
root = tk.Tk()
root.geometry("900x250")
root.title("Stopwatch")

# label to display the time
stopwatch = tk.Label(text="00:00:00", font=("Arial", 80))
stopwatch.pack()

# creating start, pause, reset, quit buttons
start_button = tk.Button(text="start", font=("Arial", 20, "bold"), command=)
reset_button = tk.Button(text="reset", font=("Arial", 20, "bold"), command=)
quit_button = tk.Button(text="quit", font=("Arial", 20, "bold"), command=)

# placing start, pause, reset, quit buttons
start_button.place(x=0,y=120,width=300, height=100)
reset_button.place(x=300,y=120,width=300, height=100)
quit_button.place(x=600,y=120,width=300, height=100)

# run app again
root.mainloop()

